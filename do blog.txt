import {router} from "express/lib/application";

const express = require('express')
import prisma, { PrismaClient, Prisma } from '@prisma/client'
const app = express()
const port = 3000

app.get('/', (req, res) => {
    res.send('Hello World!')
})

app.listen(port, () => {
    console.log(`Example app listening on port ${port}`)
})

app.route('/CreateCategory')
.get(async (req, res) => {
    try {
        let categories = await prisma.Category.findMany();
        res.json(categories);
    } catch (err) {
        console.error(err);
        res.status(500).send('Cant get Categories');
    }
})
.post(async (req, res) => {
    try {
        let categories = req.body;
        let category = await prisma.Category.create({
            data: {
                categories,
            },
        });
        res.json(categories);
    } catch (e) {
    console.error(e);
    res.status(500).send("Cant add new Category");
    }
})
app.route('/CreateCategory/:categoryName')
    .get(async (req, res) => {
        let { categoryName } = req.params;
        try {
            let category = await prisma.Category.findUnique({
                where: { category:  categoryName.toString() },
            })
            if (!category){
                return res.status(404).send("Category not found");
            }
            res.json(category);
        } catch (err) {
            console.error(err);
            res.status(500).send('Cant get Category');
        }
    })
    .put(async (req, res) => {
        let { categoryName } = req.params;
        let { newCategoryName } = req.body;
        try {
            let updatedCategory = await prisma.Category.update({
                where: { category: categoryName.toString() },
                data:{
                    newCategoryName,
                },
            });
            res.json(updatedCategory);
        } catch (e) {
            console.error(e);
            res.status(500).send("Cant update new Category");
        }
    })
    .delete(async (req, res) => {
        let { categoryName } = req.params;
        try{
            await prisma.Category.delete({
                where: { category: categoryName.toString() },
            });
            res.json({message: 'Category deleted successfully'});
        }catch(err){
            console.error(err);
            res.status(500).send("Cant delete Category");
        }
    })